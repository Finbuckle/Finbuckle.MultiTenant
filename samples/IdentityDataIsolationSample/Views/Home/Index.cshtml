@{
    ViewData["Title"] = "Home Page";
    var tenantInfo = Context.GetMultiTenantContext()?.TenantInfo;
}

@using Finbuckle.MultiTenant.AspNetCore

<div class="row">
    <div class="col">
        @if (tenantInfo != null)
        {
            <p class="mt-4 lead">TenantContext Details</p>

            <table class="table">
                <thead>
                    <tr>
                        <th>Property</th>
                        <th>Value</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>@nameof(tenantInfo.Id)</td>
                        <td>@tenantInfo.Id</td>
                    </tr>
                    <tr>
                        <td>@nameof(tenantInfo.Identifier)</td>
                        <td>@tenantInfo.Identifier</td>
                    </tr>
                    <tr>
                        <td>@nameof(tenantInfo.Name)</td>
                        <td>@tenantInfo.Name</td>
                    </tr>
                    <tr>
                        <td>@nameof(tenantInfo.ConnectionString)</td>
                        <td>@tenantInfo.ConnectionString</td>
                    </tr>
                </tbody>
            
            </table>
        
        }
        else
        {
            <p>This sample demonstrates Finbuckle.MultiTenant support for ASP.NET Core Identity</p>
            <p>
                Select a link from the navbar to change the current tenant. You can register, login, logout,
                and manage account via the default Identity UI within each tenant.
            </p>
            <p>
                Note, this app has been updated to ASP.NET Core 2.2 but has MVC compatibility set to "CompatibilityVersion.Version_2_1" due to problems with endpoint routing and Pages (used by ASP.NET Core Identity default UI).
            </p>
            <p>
                The Finbuckle and MegaCorp tenants share a common SQLite database, but Initech has its own separate datasebase.
                Both of these databases need to be created by applying the latest migration via <em>dotnet ef database update</em> or similar.
                To apply the migration to each database adjust the connection string used in the <em>Data/DesignTimeFactoy.cs</em> file in
                between migrations.
            </p>
        }
    </div>
</div>