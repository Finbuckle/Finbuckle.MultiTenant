@model TenantInfo
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "Session Strategy Sample";
}

<h4>__tenant__ session value: <small>@(Context.Session.GetString("__tenant__") ?? "<empty>")</small></h4>

@if(Model != null)
{
    <h3 class="mt-4">TenantInfo Values</h3>

    <table class="table">
        <thead>
            <tr>
                <th style="width:25%">Property</th>
                <th>Value</th>
            </tr>
        </thead>

        <tbody>
            <tr>
                <td>@nameof(Model.Id)</td>
                <td>@Model.Id</td>
            </tr>
            <tr>
                <td>@nameof(Model.Identifier)</td>
                <td>@Model.Identifier</td>
            </tr>
            <tr>
                <td>@nameof(Model.Name)</td>
                <td>@Model.Name</td>
            </tr>
            <tr>
                <td>@nameof(Model.ConnectionString)</td>
                <td>@Model.ConnectionString</td>
            </tr>
        </tbody>
    
    </table>
}
else
{
    <div class="jumbotron">
        <h1 class="display-4">Hello, world!</h1>
        <p class="lead">This sample highlights the <a href="https://www.finbuckle.com/MultiTenant/Docs/Strategies#session-strategy">session multitenant strategy</a>.</p>
        <hr class="my-4">
        <p>
            For each request the ASP.NET Core session is used to resolve the tenant.
            The SetTenant controller action simply sets the sesion variable and redirects to the home page:
            <pre><code>HttpContext.Session.SetString("__tenant__", identifier);
return RedirectToAction(nameof(Index));</code></pre>
            Any subsequest request will pick up the tenant from the session variable.
        </p>
        <p>
            Configuration in <code>Startup.cs</code>:
        </p>
        <pre><code>services.AddMultiTenant&lt;TenantInfo&gt;().
    WithConfigurationStore().
    WithSessionStrategy();</code></pre>
        <p>Click the links on the navbar to see it in action!</p>
    </div> 
}