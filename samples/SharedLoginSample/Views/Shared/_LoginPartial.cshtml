@using Microsoft.AspNetCore.Identity

@inject SignInManager<MultiTenantIdentityUser> SignInManager
@inject UserManager<MultiTenantIdentityUser> UserManager

@if (Context.GetMultiTenantContext().TenantInfo != null)
{
    <div class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="form-inline">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
        </form>
    }
    else
    {
        <a class="nav-item nav-link" asp-route-__tenant__="@Context.GetMultiTenantContext().TenantInfo.Identifier" asp-area="Identity" asp-page="/Account/Register" asp-route-returnurl="@Context.Request.Path">Register</a>
        <a class="nav-item nav-link" asp-route-__tenant__="@Context.GetMultiTenantContext().TenantInfo.Identifier" asp-area="Identity" asp-page="/Account/Login" asp-route-returnurl="@Context.Request.Path">Login</a>
    }
    </div>
}