//    Copyright 2018 Andrew White
// 
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
// 
//        http://www.apache.org/licenses/LICENSE-2.0
// 
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

using System;
using Microsoft.AspNetCore.Identity;

namespace Finbuckle.MultiTenant
{
    [Obsolete("Prefer standard Identity entity types.")]
    public class MultiTenantIdentityUser : MultiTenantIdentityUser<string>
    {
        public MultiTenantIdentityUser()
        {
            // These aren't generated by default so we have to do this here.
            Id = Guid.NewGuid().ToString();
            SecurityStamp = Guid.NewGuid().ToString();
        }

        public MultiTenantIdentityUser(string userName) : this()
        {
            UserName = userName;
        }
    }

    [Obsolete("Prefer standard Identity entity types.")]
    public class MultiTenantIdentityUser<TKey> : IdentityUser<TKey>
        where TKey : IEquatable<TKey>
    {
        public MultiTenantIdentityUser()
        {
        }

        public MultiTenantIdentityUser(string userName) : base(userName)
        {
        }
    }

    [Obsolete("Prefer standard Identity entity types.")]
    public class MultiTenantIdentityRole : MultiTenantIdentityRole<string>
    {
        public MultiTenantIdentityRole()
        {
            Id = Guid.NewGuid().ToString();
        }

        public MultiTenantIdentityRole(string roleName) : this()
        {
            Name = roleName;
        }
    }

    [Obsolete("Prefer standard Identity entity types.")]
    public class MultiTenantIdentityRole<TKey> : IdentityRole<TKey>
        where TKey : IEquatable<TKey>
    {
        public MultiTenantIdentityRole()
        {
        }

        public MultiTenantIdentityRole(string roleName) : base(roleName)
        {
        }
    }

    [Obsolete("Prefer standard Identity entity types.")]
    public class MultiTenantIdentityUserToken<TKey> : IdentityUserToken<TKey>
        where TKey : IEquatable<TKey>
    {
    }

    [Obsolete("Prefer standard Identity entity types.")]
    public class MultiTenantIdentityRoleClaim<TKey> : IdentityRoleClaim<TKey>
        where TKey : IEquatable<TKey>
    {
    }

    [Obsolete("Prefer standard Identity entity types.")]
    public class MultiTenantIdentityUserLogin<TKey> : IdentityUserLogin<TKey>
        where TKey : IEquatable<TKey>
    {
    }

    [Obsolete("Prefer standard Identity entity types.")]
    public class MultiTenantIdentityUserRole<TKey> : IdentityUserRole<TKey>
        where TKey : IEquatable<TKey>
    {
    }

    [Obsolete("Prefer standard Identity entity types.")]
    public class MultiTenantIdentityUserClaim<TKey> : IdentityUserClaim<TKey>
        where TKey : IEquatable<TKey>
    {
    }
}